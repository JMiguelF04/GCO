generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model competicoes {
  id            Int          @id @default(autoincrement())
  modalidade_id Int?
  nome          String?      @db.VarChar(100)
  modalidades   modalidades? @relation(fields: [modalidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model contacto {
  id       Int       @id @default(autoincrement())
  nome     String    @db.VarChar(255)
  email    String    @db.VarChar(255)
  assunto  String
  mensagem String
  data     DateTime? @default(now()) @db.Timestamp(6)
}

model contacto_modalidade {
  id            Int          @id @default(autoincrement())
  modalidade_id Int?
  responsavel   String?      @db.VarChar(100)
  telefone      String?      @db.VarChar(20)
  email         String?      @db.VarChar(100)
  modalidades   modalidades? @relation(fields: [modalidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model detalhes_modalidade {
  id            Int          @id @default(autoincrement())
  modalidade_id Int?
  introducao    String?
  metodologia   String?
  avaliacao     String?
  progressao    String?
  modalidades   modalidades? @relation(fields: [modalidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model equipamento {
  id            Int          @id @default(autoincrement())
  modalidade_id Int?
  nome          String?
  modalidades   modalidades? @relation(fields: [modalidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model horarios {
  id            Int          @id @default(autoincrement())
  modalidade_id Int?
  dia           String?      @db.VarChar(20)
  inicio        DateTime?    @db.Time(6)
  fim           DateTime?    @db.Time(6)
  nivel         String?      @db.VarChar(50)
  grupo         String?      @db.VarChar(50)
  modalidades   modalidades? @relation(fields: [modalidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model modalidades {
  id                  Int                   @id @default(autoincrement())
  nome                String                @db.VarChar(100)
  slug                String                @unique @db.VarChar(100)
  icone               String?               @db.VarChar(50)
  descricao           String?
  ativo               Boolean               @default(true)
  categoria           String?               @db.VarChar(100)
  idade_minima        Int
  idade_maxima        Int?
  competicoes         competicoes[]
  contacto_modalidade contacto_modalidade[]
  detalhes_modalidade detalhes_modalidade[]
  equipamento         equipamento[]
  horarios            horarios[]
  niveis              niveis[]
  preco               preco[]
}

model niveis {
  id            Int          @id @default(autoincrement())
  modalidade_id Int?
  descricao     String?      @db.VarChar(100)
  modalidades   modalidades? @relation(fields: [modalidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model preco {
  id            Int         @id @default(autoincrement())
  modalidade_id Int
  mensalidade   Decimal     @db.Decimal(10, 2)
  inscricao     Decimal     @db.Decimal(10, 2)
  equipamento   Decimal?    @db.Decimal(10, 2)
  modalidades   modalidades @relation(fields: [modalidade_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
